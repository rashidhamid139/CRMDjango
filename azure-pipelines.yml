trigger:
  - main

variables:
  imageName: "pythonsample:$(Build.BuildId)"

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: 3.5
      architecture: 'x64'

  - task: PythonScript@0
    displayName: 'Export Project Path'
    inputs:
      scriptSource: 'inline'
      script: |
        """Search all directories for manage.py"""
        from glob import iglob
        from os import path 
        #python >=3.5
         manage_py = next(iglob(path.join('**', 'manage.py'), recursive=True), None)
         print(manage_py)
        if not manage_py:
          raise SystemExit('Could not find a Django project')
        project_location = path.dirname(path.abspath(manage_py))
        print("Found Django project in ", project_location)
        print('##vso[task.setvariable variable=projectRoot]{}'.format(project_location))

  - script: |
      python -m pip install --upgrade pip setuptools wheel django 
      pip install -r requirements.txt
      pip install unittest-xml-reporting
    displayName: 'Install Prerequisite'

  - script: |
      pushd '$(projectRoot)'
      python manage.py test --testrunner  xmlrunner.extra.djangotestrunner.XMLTestRunner --no-input 
    condition: succeededOrFailed()
    displayName: 'Run tests'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: "**/TEST-*.xml"
      testRunTitle: 'Python $(PYTHON_VERSION)'
